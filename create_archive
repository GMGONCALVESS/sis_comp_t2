void create_archive(char *output_file, char **input_files, int num_input_files) {
    FILE *out_fp = fopen(output_file, "wb");
    if (!out_fp) {
        perror("Erro ao abrir arquivo de saída");
        return;
    }

    for (int i = 0; i < num_input_files; i++) {
        FILE *in_fp = fopen(input_files[i], "rb");
        if (!in_fp) {
            perror("Erro ao abrir arquivo de entrada");
            continue;
        }

        // Pular arquivo de saída se ele estiver na lista de entrada (evita recursão)
        if (strcmp(input_files[i], output_file) == 0) {
            fclose(in_fp);
            continue;
        }

        fseek(in_fp, 0, SEEK_END);
        unsigned int file_size = ftell(in_fp);
        fseek(in_fp, 0, SEEK_SET);

        struct file_header header;
        strncpy(header.name, input_files[i], MAXNAME);
        header.file_size = file_size;

        fwrite(&header, sizeof(struct file_header), 1, out_fp);

        char *buffer = (char *)malloc(file_size);
        fread(buffer, 1, file_size, in_fp);
        fwrite(buffer, 1, file_size, out_fp);

        free(buffer);
        fclose(in_fp);
    }

    fclose(out_fp);
}
